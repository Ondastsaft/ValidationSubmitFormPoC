@rendermode InteractiveServer

<div class="container">
    <div class="row">
        <div class="col-7">
            <EmployeeFields Controller="Controller.ComponentControllers.EmployeeController"></EmployeeFields>
        </div>
        <div class="col-5">
            <div class="row mt-3">
                <div class="col">
                    <DropDownFromList Controller="Controller.ComponentControllers.CompanyDropDownController"></DropDownFromList>
                </div>
            </div>
            <div class="col">
                <DropDownFromList Controller="Controller.ComponentControllers.EmployeeDropDownController"></DropDownFromList>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-8">
    </div>
    <div class="col-4">
        <div class="row">
            <div class="col">
                <RadioButtonGroup TEnum="Tab2DistanceRadioOptions" Controller="Controller.ComponentControllers.SelectDistanceRadioButtonGroupController"></RadioButtonGroup>
            </div>
            <div class="col">
                <div class="row">
                    <div class="col">
                        <CheckBoxComponent Controller="Controller.ComponentControllers.ShowAltitudeController"></CheckBoxComponent>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <CheckBoxComponent Controller="Controller.ComponentControllers.ShowWeightController"></CheckBoxComponent>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <CheckBoxComponent Controller="Controller.ComponentControllers.ShowDistanceController"></CheckBoxComponent>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-4">
        <div class="row">
            <div class="col">
                <SetValueForParameter Controller="Controller.ComponentControllers.SetWeightController"></SetValueForParameter>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <SetValueForParameter Controller="Controller.ComponentControllers.SetAltitudeController"></SetValueForParameter>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-4">
        <VerifyAndAttachFilePartial Controller="Controller.ComponentControllers.VerifyAndAttachFileDistanceController"></VerifyAndAttachFilePartial>
    </div>
    <div class="col-4">
        <VerifyAndAttachFilePartial Controller="Controller.ComponentControllers.VerifyAndAttachFileHeightController"></VerifyAndAttachFilePartial>
    </div>
</div>
<div class="row">
    <div class="col-4">
        <GenericButton ButtonController="Controller.ComponentControllers.SaveButtonController"></GenericButton>
    </div>
    <div class="col-4">
        <GenericButton ButtonController="Controller.ComponentControllers.SubmitButtonController"></GenericButton>
    </div>
</div>

@code {
    [Parameter]
    [Required]
    public Tab2Controller Controller { get; set; }

    protected override async Task OnInitializedAsync()
    {

        await Controller.ComponentControllers.InitializeControllersAsync();

        Controller.ComponentControllers.ShowWeightController.IsCheckedChanged = EventCallback.Factory.Create<bool>(this, Controller.HandleShowWeightChecked);
        Controller.ComponentControllers.ShowAltitudeController.IsCheckedChanged = EventCallback.Factory.Create<bool>(this, Controller.HandleShowAltitudeChecked);
        Controller.ComponentControllers.ShowDistanceController.IsCheckedChanged = EventCallback.Factory.Create<bool>(this, Controller.HandleShowDistanceChecked);
        Controller.ComponentControllers.SelectDistanceRadioButtonGroupController.ValueHasChanged = EventCallback.Factory.Create<bool>(this, Controller.HandleSelectDistanceParameterSet);
        Controller.ComponentControllers.SetAltitudeController.OnValueSet = EventCallback.Factory.Create<bool>(this, Controller.HandleSetHeightInput);
        Controller.ComponentControllers.CompanyDropDownController.OnDropDownSelect = EventCallback.Factory.Create<bool>(this, Controller.HandleCompanySelected);
        Controller.ComponentControllers.EmployeeDropDownController.OnDropDownSelect = EventCallback.Factory.Create<bool>(this, Controller.HandleEmployeeSelected);
    }
    //Todo Add component for input field for >10k km attach file component (VerifyAndAttachFileDistanceController)
}
